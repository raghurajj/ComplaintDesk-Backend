{"version":3,"sources":["reducers/auth.js","reducers/index.js","actions/types.js","store.js","components/Header.js","actions/auth.js","components/Complaint.js","components/PastComplaints.js","components/Login.js","components/Signup.js","components/Home.js","components/RegisterEmployee.js","components/ResetPassword.js","components/ResetPasswordConfirm.js","components/Activate.js","components/Default.js","components/ComplaintDetail.js","App.js","serviceWorker.js","index.js","components/Components.module.css"],"names":["initialState","access","localStorage","getItem","refresh","isAuthenticated","user","combineReducers","auth","state","action","type","payload","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Header","props","isNavOpen","toggleNav","bind","handlelogout","this","setState","dispatch","Navbar","dark","className","Styles","nvbr","expand","NavbarToggler","onClick","abslt","NavbarBrand","to","navlink","icon","faHome","Collapse","isOpen","navbar","Nav","NavItem","faPlusSquare","faArchive","faSignOutAlt","faSignInAlt","Component","connect","logout","Map","ReactMapboxGl","accessToken","Complaint","topic","description","lattitude","longitude","getLocation","getCoordinates","onChangeInput","onClickMap","handleSubmit","event","navigator","geolocation","getCurrentPosition","alert","preventDefault","position","coords","latitude","target","name","value","config","headers","axios","get","res","author","data","id","Category","body","JSON","stringify","console","log","post","map","evt","lngLat","lat","lng","from","opacity","marginLeft","duration","style","fitpage","C_input","onChange","placeholder","btn","fill_button","containerStyle","height","width","center","zoom","PastComplaint","complaintData","LoadData","prevProps","container","complaint","linkk","pk","blackk","login","email","password","a","useState","formData","setFormData","e","onSubmit","required","minLength","signup","re_password","accountCreated","setAccountCreated","Home","reset_password","requestSent","setRequestSent","reset_password_confirm","uid","token","new_password","re_new_password","match","params","verify","verified","setVerified","display","justifyContent","alignItems","flexDirection","marginTop","ComplaintDetail","window","location","pathname","split","url","c_detail","coordinates","anchor","mapMarkerStyle","App","exact","path","component","PastComplaints","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","Default","Boolean","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.ecfee645.chunk.js","sourcesContent":["import {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: false,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case SIGNUP_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS';\r\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const COMPLAINT_POST_SUCCESS='COMPLAINT_POST_SUCCESS';\r\nexport const COMPLAINT_POST_FAIL='COMPLAINT_POST_FAIL';","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React,{Component} from 'react';\r\nimport {NavLink,Link} from 'react-router-dom'\r\nimport Styles from './Components.module.css';\r\nimport { Navbar, NavbarBrand,Nav, NavbarToggler, Collapse , NavItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faPlusSquare, faArchive, faSignInAlt ,faSignOutAlt} from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\nimport { LOGOUT } from '../actions/types';\r\nimport store from '../store';\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isNavOpen:false,\r\n        };\r\n        // handlelogout\r\n        this.toggleNav=this.toggleNav.bind(this);\r\n        this.handlelogout=this.handlelogout.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen:!this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    handlelogout(){\r\n        store.dispatch({ type: LOGOUT });\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Navbar dark className={`sticky-top ${Styles.nvbr}`} expand=\"md\">\r\n                <div className=\"container\" >\r\n                    <NavbarToggler onClick={this.toggleNav} className={Styles.abslt}/>\r\n                    <NavbarBrand  className=\"mr-auto \">\r\n                        <NavLink to=\"/\"  className={Styles.navlink}><FontAwesomeIcon icon={faHome} />&nbsp;ComplaintDesk</NavLink>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen } navbar>\r\n                        <Nav navbar className=\"ml-auto\">\r\n                            <NavItem>\r\n                                <NavLink className={`${Styles.navlink}`} to=\"/newcomplaint\">\r\n                                <FontAwesomeIcon icon={faPlusSquare} />&nbsp;New Complaint&nbsp;&nbsp;\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className={`${Styles.navlink}`} to=\"/pastcomplaints\">\r\n                                <FontAwesomeIcon icon={faArchive} />&nbsp;Past Complaints&nbsp;&nbsp;\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            {/* {console.log(isAuthenticated)} */}\r\n                            {\r\n                                this.props.isAuthenticated?\r\n                                <NavItem>\r\n                                <NavLink className={`${Styles.navlink}`} to='#!' onClick={this.handlelogout}>\r\n                                <FontAwesomeIcon icon={faSignOutAlt} />&nbsp;Logout\r\n                                </NavLink>\r\n                                </NavItem>:\r\n                                <NavItem>\r\n                                <NavLink className={`${Styles.navlink}`} to=\"/login\">\r\n                                <FontAwesomeIcon icon={faSignInAlt} />&nbsp;Login\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                \r\n\r\n                            }\r\n                        </Nav>\r\n                    </Collapse>\r\n                    \r\n                </div>\r\n            </Navbar>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n\r\n// store.dispatch({ type: LOGOUT })","import axios from 'axios';\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    RESET_PASSWORD_CONFIRM_SUCCESS,\r\n    RESET_PASSWORD_CONFIRM_FAIL,\r\n    LOGOUT,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (typeof window == 'undefined') {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    \r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n    \r\n        try {\r\n            const res = await axios.post('/auth/jwt/verify/', body, config);\r\n    \r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        // console.log(config);\r\n\r\n        try {\r\n            const res = await axios.get('/auth/users/me/', config);\r\n\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            // console.log(\"yupp\");\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        // console.log(\"ntt\");\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/auth/jwt/create/', body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = ({ name, email, password, re_password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password }); \r\n\r\n    try {\r\n        const res = await axios.post('/auth/users/', body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token }); \r\n\r\n    try {\r\n        const res = await axios.post('/auth/users/activation/', body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email }); \r\n\r\n    try {\r\n        const res = await axios.post('/auth/users/reset_password/', body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password }); \r\n\r\n    try {\r\n        const res = await axios.post('/auth/users/reset_password_confirm/', body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n};","import React,{Component} from 'react';\r\nimport Styles from './Components.module.css';\r\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport axios from 'axios';\r\nimport { Spring } from 'react-spring/renderprops'; \r\n\r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken:\r\n    'pk.eyJ1IjoicmFnaHVyYWpqIiwiYSI6ImNrMnJpYzhzZjA2MGIzZXBkb2oxYnV2MWQifQ.1PinwGk6Y3P0q-l7SXkfWg'\r\n});\r\n\r\nclass Complaint extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            topic:\"\",\r\n            description:\"\",\r\n            lattitude:\"\",\r\n            longitude:\"\"\r\n        };\r\n        this.getLocation= this.getLocation.bind(this);\r\n        this.getCoordinates=this.getCoordinates.bind(this);\r\n        this.onChangeInput=this.onChangeInput.bind(this);\r\n        this.onClickMap=this.onClickMap.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n    getLocation(event) {\r\n        if (navigator.geolocation) {\r\n          navigator.geolocation.getCurrentPosition(this.getCoordinates);\r\n        } else {\r\n          alert(\"Geolocation is not supported by this browser.\");\r\n        }\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    getCoordinates(position)\r\n    {\r\n        this.setState({\r\n            lattitude:position.coords.latitude,\r\n            longitude:position.coords.longitude\r\n        })\r\n    }\r\n\r\n    onChangeInput(event){\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        if (localStorage.getItem('access')) {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                    'Accept': 'application/json'\r\n                }\r\n            };\r\n    \r\n\r\n            const res = await axios.get('/auth/users/me/', config);\r\n            // console.log(res);\r\n            const author = res.data.id;\r\n            const Category = this.state.topic;\r\n            const description = this.state.description;\r\n            const latitude = this.state.lattitude;\r\n            const longitude = this.state.longitude;\r\n            const body = JSON.stringify({author, Category,description,latitude,longitude});\r\n            console.log(body);\r\n            try {\r\n                const res = await axios.post('/complaint/api/',body, config);\r\n                console.log(\"compliant post success\");\r\n            \r\n            } catch (err) {\r\n                console.log(\"compliant post failed\");\r\n            }\r\n        } \r\n\r\n    }\r\n\r\n    onClickMap(map, evt) {\r\n        this.setState({\r\n            lattitude:evt.lngLat.lat,\r\n            longitude:evt.lngLat.lng\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Spring\r\n                from={{opacity:0,marginLeft:-500}}\r\n                to={{opacity:1,marginLeft:0}}\r\n                config={{duration:1000}}\r\n                >\r\n                    {props =>(\r\n                    <div style={props}>\r\n                        <div className={Styles.fitpage}>\r\n                            <div className=\"row mb-5\">\r\n                                <h1>Add a New Complaint</h1>\r\n                            </div>\r\n                            \r\n                            <div className=\"row mx-5\">\r\n                                <div className=\"col-10 col-md-5 mt-3\">\r\n                                    <form>\r\n                                        <div className={Styles.C_input}>\r\n                                            <input onChange={this.onChangeInput}  type=\"text\" name=\"topic\" placeholder=\"Topic\"/><br/> \r\n                                        </div>  \r\n                                        <div className={Styles.C_input}>\r\n                                            <textarea onChange={this.onChangeInput} type=\"text\" name=\"description\" placeholder=\"Description\"/><br/> \r\n                                        </div> \r\n                                        <div className={Styles.C_input}>\r\n                                            <input onChange={this.onChangeInput} type=\"number\" name=\"lattitude\" placeholder=\"Lattitude\" value={this.state.lattitude}/><br/> \r\n                                        </div> \r\n                                        <div className={Styles.C_input}>\r\n                                            <input onChange={this.onChangeInput} type=\"number\" name=\"longitude\" placeholder=\"Longitude\" value={this.state.longitude}/><br/> \r\n                                        </div> \r\n\r\n                                        {/* <div className={Styles.C_input}>\r\n                                            <input type=\"file\" name=\"image\" placeholder=\"image\" /><br/> \r\n                                        </div> */}\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-4 mx-auto  mt-2\" >\r\n                                            <button onClick={this.getLocation }   className={`${Styles.btn} ${Styles.fill_button}`}>getlocation</button>\r\n                                            </div>\r\n                                            <div className=\"col-md-4 mx-auto mt-2\" >\r\n                                                <button onClick={this.handleSubmit} className={`${Styles.btn} ${Styles.fill_button}`}> Submit</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"col-10 col-md-5 mt-3\">\r\n                                    <div >\r\n                                        <Map\r\n                                            style=\"mapbox://styles/mapbox/streets-v9\"\r\n                                            containerStyle={{\r\n                                                height: '60vh',\r\n                                                width: '45vw'\r\n                                            }}\r\n                                            center={[80.94615925,26.8467088]}\r\n                                            zoom={[5]}\r\n                                            onClick={this.onClickMap}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n            </Spring>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Complaint;","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport Styles from './Components.module.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { Spring } from 'react-spring/renderprops'; \r\n\r\n\r\nclass PastComplaint extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            complaintData:[]\r\n        };\r\n        this.LoadData=this.LoadData.bind(this);\r\n    }\r\n\r\n    async LoadData(){\r\n        if (localStorage.getItem('access')) {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                    'Accept': 'application/json'\r\n                }\r\n            };\r\n\r\n            try {\r\n                const res = await axios.get('/complaint/api/pastcomplaint/', config);\r\n                console.log(res.data);\r\n                this.setState({\r\n                    complaintData:res.data\r\n                })\r\n            \r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LoadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.id !== prevProps.id) {\r\n          this.LoadData();\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    render(){\r\n        \r\n        return(\r\n            <Spring\r\n            from={{opacity:0,marginLeft:-500}}\r\n            to={{opacity:1,marginLeft:0}}\r\n            config={{duration:1000}}\r\n            >\r\n                {props =>(\r\n                   <div style={props}>\r\n                        <div className={Styles.container}>\r\n                            {this.state.complaintData &&\r\n                            this.state.complaintData.map(complaint => {\r\n\r\n                                return (\r\n                                    <Link className={Styles.linkk} to={`complaintdetail/${complaint.pk}`}>\r\n                                        <div className={Styles.complaint}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-header\">\r\n                                                <h4>{complaint.Category}</h4>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <p className={`card-text ${Styles.blackk}`}>{complaint.description}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                   </div>)}\r\n            </Spring>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default PastComplaint;\r\n\r\n\r\n\r\n\r\n        // <Spring\r\n        //     from={{opacity:0,marginLeft:-500}}\r\n        //     to={{opacity:1,marginLeft:0}}\r\n        //     config={{duration:1000}}\r\n        //     >\r\n        //         {props =>(\r\n        //            <div style={props}>\r\n\r\n        //            </div>\r\n        //         )}\r\n        //  </Spring>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import Styles from './Components.module.css';\r\n\r\n// const PastComplaint = ()=>{\r\n//     return(\r\n//         <div>\r\n//             <button className={`${Styles.btn} ${Styles.fill_button}`}>PastComplaint </button>\r\n//             <button className={`${Styles.btn} ${Styles.empty_button}`}>PastComplaint </button>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default PastComplaint;","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport Styles from './Components.module.css';\r\nimport { Spring } from 'react-spring/renderprops'; \r\n\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n    \r\n    return (\r\n        <Spring\r\n            from={{opacity:0,marginLeft:-500}}\r\n            to={{opacity:1,marginLeft:0}}\r\n            config={{duration:1000}}\r\n            >\r\n                {props =>(\r\n                <div style={props}>\r\n                     <div className={Styles.container}>\r\n                        <div className='row mx-3'>\r\n                            <div className=\"col-md-5 mx-auto my-auto\"> \r\n                                <h1>Sign In</h1>\r\n                                <p>Sign into your Account</p>\r\n                                <form onSubmit={e => onSubmit(e)}>\r\n                                    <div className='form-group'>\r\n                                        <input \r\n                                            className='form-control'\r\n                                            type='email'\r\n                                            placeholder='Email'\r\n                                            name='email'\r\n                                            value={email}\r\n                                            onChange={e => onChange(e)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <input\r\n                                            className='form-control'\r\n                                            type='password'\r\n                                            placeholder='Password'\r\n                                            name='password'\r\n                                            value={password}\r\n                                            onChange={e => onChange(e)}\r\n                                            minLength='6'\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <button className={`${Styles.btn} ${Styles.fill_button}`} type='submit'>Login</button>\r\n                                </form>\r\n                                <p className='mt-3'>\r\n                                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n                                </p>\r\n                                <p className='mt-3'>\r\n                                Forgot your Password? <Link to='/reset_password'>Reset Password</Link>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )}\r\n        </Spring>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React,{Component, useState} from 'react';\r\n// import {Link} from 'react-router-dom';\r\n// import {connect} from 'react-redux';\r\n\r\n// import Styles from './Components.module.css';\r\n\r\n// class Login extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//            username:\"\",\r\n//            password:\"\"\r\n//         };\r\n//         this.onChangeInput=this.onChangeInput.bind(this);\r\n//         this.handleLogin=this.handleLogin.bind(this);\r\n//     }\r\n\r\n//     onChangeInput(event){\r\n//         this.setState({\r\n//             [event.target.name]:event.target.value\r\n//         })\r\n\r\n//     }\r\n\r\n//     handleLogin(event){\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     render(){\r\n//         return (\r\n//             <div className=\"row\" >\r\n//                 <div className=\"col-md-5 mx-auto my-5\">\r\n//                     <form method=\"GET\">\r\n//                         <div className={Styles.C_input}>\r\n//                             <input onChange={this.onChangeInput}  type=\"text\" name=\"username\" placeholder=\"Username\"/><br/> \r\n//                         </div>  \r\n//                         <div className={Styles.C_input}>\r\n//                             <input onChange={this.onChangeInput} type=\"password\" name=\"password\" placeholder=\"Password\"/><br/> \r\n//                         </div> \r\n\r\n//                         <div className=\"row\">\r\n//                             <div className=\"col-md-5 mx-auto\" >\r\n//                                 <button onClick={this.handleLogin} className={`${Styles.btn} ${Styles.fill_button}`}>Login</button>\r\n//                             </div>\r\n//                             <div className=\"col-md-5 mx-auto\" >\r\n//                                 <p>Don't have an account then  </p>\r\n//                                 <button className={`${Styles.btn} ${Styles.fill_button}`}><Link to=\"/uregister\" className={Styles.navlink}>Register</Link></button>\r\n//                             </div>\r\n//                         </div>\r\n//                     </form>\r\n//                 </div>\r\n//             </div>\r\n\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Login;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signup } from '../actions/auth';\r\nimport Styles from './Components.module.css';\r\nimport { Spring } from 'react-spring/renderprops'; \r\n\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n\r\n    const { name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup({ name, email, password, re_password });\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n    if (accountCreated)\r\n        return <Redirect to='login' />;\r\n    \r\n    return (\r\n        <Spring\r\n            from={{opacity:0,marginLeft:-500}}\r\n            to={{opacity:1,marginLeft:0}}\r\n            config={{duration:1000}}\r\n            >\r\n                {props =>(\r\n                   <div style={props}>\r\n                        <div className={Styles.fitpage}>\r\n                            <div className='row mx-3'>\r\n                                <div className=\"col-md-5 mx-auto my-auto\"> \r\n                                    <h1>Sign Up</h1>\r\n                                    <p>Create your Account</p>\r\n                                    <form onSubmit={e => onSubmit(e)}>\r\n                                        <div className='form-group'>\r\n                                            <input \r\n                                                className='form-control'\r\n                                                type='text'\r\n                                                placeholder='Name*'\r\n                                                name='name'\r\n                                                value={name}\r\n                                                onChange={e => onChange(e)}\r\n                                                required \r\n                                            />\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <input \r\n                                                className='form-control'\r\n                                                type='email'\r\n                                                placeholder='Email*'\r\n                                                name='email'\r\n                                                value={email}\r\n                                                onChange={e => onChange(e)}\r\n                                                required \r\n                                            />\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <input\r\n                                                className='form-control'\r\n                                                type='password'\r\n                                                placeholder='Password*'\r\n                                                name='password'\r\n                                                value={password}\r\n                                                onChange={e => onChange(e)}\r\n                                                minLength='6'\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <input\r\n                                                className='form-control'\r\n                                                type='password'\r\n                                                placeholder='Confirm Password*'\r\n                                                name='re_password'\r\n                                                value={re_password}\r\n                                                onChange={e => onChange(e)}\r\n                                                minLength='6'\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        <button className={`${Styles.btn} ${Styles.fill_button}`}  type='submit'>Register</button>\r\n                                    </form>\r\n                                    <p className='mt-3'>\r\n                                        Already have an account? <Link to='/login'>Sign In</Link>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                   </div>\r\n                )}\r\n         </Spring>\r\n       \r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React,{Component} from 'react';\r\n// import {Link} from 'react-router-dom';\r\n// import Styles from './Components.module.css';\r\n\r\n// class Signup extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//            username:\"\",\r\n//            password:\"\"\r\n//         };\r\n//         this.onChangeInput=this.onChangeInput.bind(this);\r\n//         this.handleLogin=this.handleLogin.bind(this);\r\n//     }\r\n\r\n//     onChangeInput(event){\r\n//         this.setState({\r\n//             [event.target.name]:event.target.value\r\n//         })\r\n\r\n//     }\r\n\r\n//     handleLogin(event){\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     render(){\r\n//         return (\r\n//             <div className=\"row\" >\r\n//                 <div className=\"col-md-5 mx-auto my-5\">\r\n//                 <button className={`${Styles.btn} ${Styles.fill_button}`}><Link to=\"/eregister\" className={Styles.navlink}>Register as an Employee</Link></button>\r\n//                     <p>OR</p>\r\n//                     <h3>Register as an User</h3>\r\n//                     <form method=\"GET\">\r\n//                         <div className={Styles.C_input}>\r\n//                             <input onChange={this.onChangeInput}  type=\"text\" name=\"username\" placeholder=\"Username\"/><br/> \r\n//                         </div>  \r\n//                         <div className={Styles.C_input}>\r\n//                             <input onChange={this.onChangeInput} type=\"password\" name=\"password\" placeholder=\"Password\"/><br/> \r\n//                         </div> \r\n\r\n//                         <button onClick={this.handleLogin} className={`${Styles.btn} ${Styles.fill_button}`}>Register</button>\r\n                        \r\n//                     </form>\r\n//                 </div>\r\n//             </div>\r\n\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Signup;","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport Styles from './Components.module.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { Spring } from 'react-spring/renderprops'; \r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            complaintData:[]\r\n        };\r\n        this.LoadData=this.LoadData.bind(this);\r\n    }\r\n\r\n    async LoadData(){\r\n        if (localStorage.getItem('access')) {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            };\r\n\r\n            try {\r\n                const res = await axios.get('/complaint/api/', config);\r\n                console.log(res.data);\r\n                this.setState({\r\n                    complaintData:res.data\r\n                })\r\n            \r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LoadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.id !== prevProps.id) {\r\n          this.LoadData();\r\n        }\r\n      }\r\n\r\n    \r\n    \r\n    render(){\r\n        \r\n        return(\r\n            <Spring\r\n            from={{opacity:0,marginLeft:-500}}\r\n            to={{opacity:1,marginLeft:0}}\r\n            config={{duration:1000}}\r\n            >\r\n                {props =>(\r\n                   <div style={props}>\r\n                       <div className={Styles.container}>\r\n                            {this.state.complaintData &&\r\n                            this.state.complaintData.map(complaint => {\r\n\r\n                                return (\r\n                                    <Link className={Styles.linkk} to={`complaintdetail/${complaint.pk}`}>\r\n                                        <div className={Styles.complaint}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-header\">\r\n                                                <h4>{complaint.Category}</h4>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <p className={`card-text ${Styles.blackk}`}>{complaint.description}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                   </div> \r\n                )}\r\n            </Spring>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React,{Component} from 'react';\r\nimport Styles from './Components.module.css';\r\n\r\nclass RegisterEmployee extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n           username:\"\",\r\n           password:\"\"\r\n        };\r\n        this.onChangeInput=this.onChangeInput.bind(this);\r\n        this.handleLogin=this.handleLogin.bind(this);\r\n    }\r\n\r\n    onChangeInput(event){\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    handleLogin(event){\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"row\" >\r\n                <div className=\"col-md-5 mx-auto my-5\">\r\n                    \r\n                    <form method=\"GET\">\r\n                        <div className={Styles.C_input}>\r\n                            <input onChange={this.onChangeInput}  type=\"text\" name=\"username\" placeholder=\"Username\"/><br/> \r\n                        </div>  \r\n                        <div className={Styles.C_input}>\r\n                            <input onChange={this.onChangeInput} type=\"password\" name=\"password\" placeholder=\"Password\"/><br/> \r\n                        </div> \r\n\r\n                        <button onClick={this.handleLogin} className={`${Styles.btn} ${Styles.fill_button}`}>Register</button>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterEmployee;","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../actions/auth';\r\nimport Styles from './Components.module.css';\r\n\r\nconst ResetPassword = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className={Styles.container}>\r\n            <div className='container'>\r\n                <h1>Request Password Reset:</h1>\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <input \r\n                            className='form-control'\r\n                            type='email'\r\n                            placeholder='Your Email'\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button className={`${Styles.btn} ${Styles.fill_button}`} type='submit'>Reset Password</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\nimport Styles from './Components.module.css';\r\n\r\nconst ResetPasswordConfirm = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const uid = props.match.params.uid;\r\n        const token = props.match.params.token;\r\n\r\n        props.reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className={Styles.container}>\r\n            <div className='container'>\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <input \r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='New Password'\r\n                            name='new_password'\r\n                            value={new_password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='Confirm New Password'\r\n                            name='re_new_password'\r\n                            value={re_new_password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button className={`${Styles.btn} ${Styles.fill_button}`} type='submit'>Reset Password</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\nimport Styles from './Components.module.css';\r\n\r\nconst Activate = (props) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = props.match.params.uid;\r\n        const token = props.match.params.token;\r\n\r\n        props.verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className={Styles.container}>\r\n            <div className='container'>\r\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column',marginTop: '200px' }}>\r\n                    <h1>Verify your Account:</h1>\r\n                    <button \r\n                        onClick={verify_account}\r\n                        style={{ marginTop: '50px' }}\r\n                        type=\"button\"\r\n                        className={`${Styles.btn} ${Styles.fill_button}`}\r\n                    >\r\n                        Verify\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","import React from 'react';\r\nimport Styles from './Components.module.css';\r\n\r\nconst PastComplaint = ()=>{\r\n    return(\r\n        <div>\r\n            <h1>Opps! wrong page!!</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PastComplaint;","import React,{Component} from 'react';\r\nimport Styles from './Components.module.css';\r\nimport ReactMapboxGl, { Layer, Feature,Marker } from 'react-mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport axios from 'axios';\r\nimport { Spring } from 'react-spring/renderprops'; \r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken:\r\n    'pk.eyJ1IjoicmFnaHVyYWpqIiwiYSI6ImNrMnJpYzhzZjA2MGIzZXBkb2oxYnV2MWQifQ.1PinwGk6Y3P0q-l7SXkfWg'\r\n});\r\n\r\nclass ComplaintDetail extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            complaintData:''\r\n        };\r\n        this.LoadData=this.LoadData.bind(this);\r\n    }\r\n\r\n    async LoadData(){\r\n        if (localStorage.getItem('access')) {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                    'Accept': 'application/json'\r\n                }\r\n            };\r\n\r\n            try {\r\n                const pk = (window.location.pathname.split('/'))[2];\r\n                const url = '/complaint/api/pastcomplaint/'+pk+'/';\r\n                const res = await axios.get(url, config);\r\n                console.log(res.data);\r\n                this.setState({\r\n                    complaintData:res.data\r\n                })\r\n            \r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LoadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.id !== prevProps.id) {\r\n          this.LoadData();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Spring\r\n                from={{opacity:0,marginLeft:-500}}\r\n                to={{opacity:1,marginLeft:0}}\r\n                config={{duration:1000}}\r\n                >\r\n                    {props =>(\r\n                    <div style={props}>\r\n                         <div className={Styles.container}>\r\n                            <div className=\"row\">\r\n                                <h1>{this.state.complaintData[0]?this.state.complaintData[0].Category:'Category'}</h1>\r\n                            </div>\r\n                            <div className=\"row my-5 mx-5\">\r\n                                <div className={`col-10 col-md-5 mt-3 ${Styles.c_detail}`}>\r\n                                    <p>{this.state.complaintData[0]?this.state.complaintData[0].description:'description'}</p>\r\n                                    <br/>\r\n                                    <p>{this.state.complaintData[0]?this.state.complaintData[0].latitude:'latitude'}</p>\r\n                                    <p>{this.state.complaintData[0]?this.state.complaintData[0].longitude:'longitude'}</p>\r\n                                </div>\r\n                                <div className=\"col-10 col-md-5 pr-5\">\r\n                                    <Map\r\n                                        style=\"mapbox://styles/mapbox/streets-v9\"\r\n                                        containerStyle={{\r\n                                            height: '60vh',\r\n                                            width: '40vw'\r\n                                        }}\r\n                                        center={this.state.complaintData[0]?[this.state.complaintData[0].longitude,this.state.complaintData[0].latitude]:[80.94615925,26.8467088]}\r\n                                        zoom={[5]}\r\n                                    >\r\n                                        {this.state.complaintData[0]?\r\n                                        <Marker\r\n                                            coordinates={[this.state.complaintData[0].longitude,this.state.complaintData[0].latitude]}\r\n                                            anchor=\"bottom\"\r\n                                            width='10px'\r\n                                            height='10px'>\r\n                                            <div className={Styles.mapMarkerStyle} />\r\n                                        </Marker>:\r\n                                        <Marker\r\n                                            coordinates={[80.94615925, 26.8467088]}\r\n                                            anchor=\"bottom\"\r\n                                            width='10px'\r\n                                            height='10px'>\r\n                                            <div className={Styles.mapMarkerStyle} />\r\n                                        </Marker>\r\n                                        }\r\n                                    </Map>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n            </Spring>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComplaintDetail;","import React from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {Switch,Route} from 'react-router-dom';\nimport Header from './components/Header';\nimport Complaint from './components/Complaint';\nimport PastComplaints from './components/PastComplaints';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport RegisterEmployee from './components/RegisterEmployee';\nimport Home from './components/Home';\nimport ResetPassword from './components/ResetPassword';\nimport ResetPasswordConfirm from './components/ResetPasswordConfirm';\nimport Activate from './components/Activate';\nimport Default from './components/Default';\nimport ComplaintDetail from './components/ComplaintDetail';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n        <Header/>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path=\"/newcomplaint\" component={Complaint} />\n          <Route exact path=\"/pastcomplaints\" component={PastComplaints} />\n          <Route exact path=\"/complaintdetail/:pk\" component={ComplaintDetail} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path='/signup' component={Signup} />\n          <Route exact path='/reset_password' component={ResetPassword} />\n          <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n          <Route exact path='/activate/:uid/:token' component={Activate} />\n          <Route component={Default} />\n          \n        </Switch>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nvbr\":\"Components_nvbr__3iG-Z\",\"navlink\":\"Components_navlink__24IkJ\",\"toggler\":\"Components_toggler__2Yk1k\",\"container\":\"Components_container__3jssv\",\"btn\":\"Components_btn__1U7OY\",\"fill_button\":\"Components_fill_button__3WKKB\",\"empty_button\":\"Components_empty_button__26J0a\",\"form\":\"Components_form__2izBT\",\"C_input\":\"Components_C_input__HAbIC\",\"complaint\":\"Components_complaint__3Ukaq\",\"blackk\":\"Components_blackk__3cxl4\",\"linkk\":\"Components_linkk__1GeqS\",\"c_detail\":\"Components_c_detail__2hfV2\",\"fitpage\":\"Components_fitpage__3lYhw\",\"overflow_scroll\":\"Components_overflow_scroll__1VCd2\",\"mapMarkerStyle\":\"Components_mapMarkerStyle__35Xfg\"};"],"sourceRoot":""}