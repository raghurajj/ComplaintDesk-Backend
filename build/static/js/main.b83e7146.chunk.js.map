{"version":3,"sources":["actions/auth.js","actions/types.js","reducers/auth.js","reducers/index.js","store.js","components/Header.js","components/Complaint.js","components/PastComplaints.js","components/Login.js","components/Signup.js","components/Home.js","components/RegisterEmployee.js","components/ResetPassword.js","components/ResetPasswordConfirm.js","components/Activate.js","components/Default.js","components/ComplaintDetail.js","hocs/Layout.js","App.js","serviceWorker.js","index.js","components/Components.module.css"],"names":["load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","res","type","payload","data","initialState","access","refresh","isAuthenticated","user","combineReducers","auth","state","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Header","props","isNavOpen","toggleNav","bind","handlelogout","this","setState","Navbar","dark","className","Styles","nvbr","expand","NavbarToggler","onClick","abslt","NavbarBrand","to","navlink","icon","faHome","Collapse","isOpen","navbar","Nav","NavItem","faPlusSquare","faArchive","faSignOutAlt","faSignInAlt","Component","connect","logout","Map","ReactMapboxGl","accessToken","Complaint","topic","description","lattitude","longitude","getLocation","getCoordinates","onChangeInput","onClickMap","handleSubmit","event","navigator","geolocation","getCurrentPosition","alert","preventDefault","position","coords","latitude","target","name","value","author","id","Category","body","JSON","stringify","console","log","post","map","evt","lngLat","lat","lng","from","opacity","marginLeft","duration","style","fitpage","C_input","onChange","placeholder","btn","fill_button","containerStyle","height","width","center","zoom","PastComplaint","complaintData","LoadData","prevProps","container","complaint","linkk","pk","blackk","login","email","password","useState","formData","setFormData","e","continueWithGoogle","window","location","replace","authorization_url","onSubmit","required","minLength","signup","firstname","lastname","re_password","accountCreated","setAccountCreated","Home","reset_password","requestSent","setRequestSent","reset_password_confirm","uid","token","new_password","re_new_password","match","params","verify","verified","setVerified","display","justifyContent","alignItems","flexDirection","marginTop","ComplaintDetail","pathname","split","url","c_detail","coordinates","anchor","mapMarkerStyle","checkAuthenticated","code","googleAuthenticate","details","formBody","Object","keys","key","encodeURIComponent","join","useLocation","useEffect","values","queryString","parse","search","children","App","exact","path","component","PastComplaints","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","Default","Boolean","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.b83e7146.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAIL,\r\n    RESET_PASSWORD_CONFIRM_SUCCESS,\r\n    RESET_PASSWORD_CONFIRM_FAIL,\r\n    LOGOUT,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        // console.log(config);\r\n\r\n        try {\r\n            const res = await axios.get('/auth/users/me/', config);\r\n\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            // console.log(\"yupp\");\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        // console.log(\"ntt\");\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const googleAuthenticate =(state,code) => async dispatch=>{\r\n    if(state && code && !localStorage.getItem('access')){\r\n        const config={\r\n            headers:{\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        const details ={\r\n            'state':state,\r\n            'code':code\r\n        };\r\n\r\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key)+ '=' + encodeURIComponent(details[key])).join('&');\r\n\r\n        try{\r\n            const res = await axios.post(`/auth/o/google-oauth2/?${formBody}`, config);\r\n\r\n            dispatch({\r\n                type:GOOGLE_AUTH_SUCCESS,\r\n                payload:res.data\r\n            });\r\n\r\n            dispatch(load_user());\r\n        }catch(err){\r\n            dispatch({\r\n                type:GOOGLE_AUTH_FAIL\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (typeof window == 'undefined') {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    \r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n    \r\n        try {\r\n            const res = await axios.post('/auth/jwt/verify/', body, config);\r\n    \r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/auth/jwt/create/', body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = ({ firstname,lastname, email, password, re_password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ firstname,lastname, email, password, re_password }); \r\n\r\n    try {\r\n        const res = await axios.post('/auth/users/', body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token }); \r\n\r\n    try {\r\n        const res = await axios.post('/auth/users/activation/', body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email }); \r\n\r\n    try {\r\n        const res = await axios.post('/auth/users/reset_password/', body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password }); \r\n\r\n    try {\r\n        const res = await axios.post('/auth/users/reset_password_confirm/', body, config);\r\n\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT });\r\n};","export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS';\r\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL';\r\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\r\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const COMPLAINT_POST_SUCCESS='COMPLAINT_POST_SUCCESS';\r\nexport const COMPLAINT_POST_FAIL='COMPLAINT_POST_FAIL'; ","import {\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    GOOGLE_AUTH_SUCCESS,\r\n    GOOGLE_AUTH_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: false,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false \r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case GOOGLE_AUTH_SUCCESS:\r\n            localStorage.setItem('access',payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case GOOGLE_AUTH_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React,{Component} from 'react';\r\nimport {NavLink,Link} from 'react-router-dom'\r\nimport Styles from './Components.module.css';\r\nimport { Navbar, NavbarBrand,Nav, NavbarToggler, Collapse , NavItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faPlusSquare, faArchive, faSignInAlt ,faSignOutAlt} from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\nimport { LOGOUT } from '../actions/types';\r\nimport store from '../store';\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isNavOpen:false,\r\n        };\r\n        // handlelogout\r\n        this.toggleNav=this.toggleNav.bind(this);\r\n        this.handlelogout=this.handlelogout.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen:!this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    handlelogout(){\r\n        store.dispatch({ type: LOGOUT });\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Navbar dark className={`sticky-top ${Styles.nvbr}`} expand=\"md\">\r\n                <div className=\"container\" >\r\n                    <NavbarToggler onClick={this.toggleNav} className={Styles.abslt}/>\r\n                    <NavbarBrand  className=\"mr-auto \">\r\n                        <NavLink to=\"/\"  className={Styles.navlink}><FontAwesomeIcon icon={faHome} />&nbsp;ComplaintDesk</NavLink>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen } navbar>\r\n                        <Nav navbar className=\"ml-auto\">\r\n                            <NavItem>\r\n                                <NavLink className={`${Styles.navlink}`} to=\"/newcomplaint\">\r\n                                <FontAwesomeIcon icon={faPlusSquare} />&nbsp;New Complaint&nbsp;&nbsp;\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className={`${Styles.navlink}`} to=\"/pastcomplaints\">\r\n                                <FontAwesomeIcon icon={faArchive} />&nbsp;Past Complaints&nbsp;&nbsp;\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            {/* {console.log(isAuthenticated)} */}\r\n                            {\r\n                                this.props.isAuthenticated?\r\n                                <NavItem>\r\n                                <NavLink className={`${Styles.navlink}`} to='#!' onClick={this.handlelogout}>\r\n                                <FontAwesomeIcon icon={faSignOutAlt} />&nbsp;Logout\r\n                                </NavLink>\r\n                                </NavItem>:\r\n                                <NavItem>\r\n                                <NavLink className={`${Styles.navlink}`} to=\"/login\">\r\n                                <FontAwesomeIcon icon={faSignInAlt} />&nbsp;Login\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                \r\n\r\n                            }\r\n                        </Nav>\r\n                    </Collapse>\r\n                    \r\n                </div>\r\n            </Navbar>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n\r\n// store.dispatch({ type: LOGOUT })","import React,{Component} from 'react';\r\nimport Styles from './Components.module.css';\r\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport axios from 'axios';\r\nimport { Spring } from 'react-spring/renderprops'; \r\n\r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken:\r\n    'pk.eyJ1IjoicmFnaHVyYWpqIiwiYSI6ImNrMnJpYzhzZjA2MGIzZXBkb2oxYnV2MWQifQ.1PinwGk6Y3P0q-l7SXkfWg'\r\n});\r\n\r\nclass Complaint extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            topic:\"\",\r\n            description:\"\",\r\n            lattitude:\"\",\r\n            longitude:\"\"\r\n        };\r\n        this.getLocation= this.getLocation.bind(this);\r\n        this.getCoordinates=this.getCoordinates.bind(this);\r\n        this.onChangeInput=this.onChangeInput.bind(this);\r\n        this.onClickMap=this.onClickMap.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n    getLocation(event) {\r\n        if (navigator.geolocation) {\r\n          navigator.geolocation.getCurrentPosition(this.getCoordinates);\r\n        } else {\r\n          alert(\"Geolocation is not supported by this browser.\");\r\n        }\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    getCoordinates(position)\r\n    {\r\n        this.setState({\r\n            lattitude:position.coords.latitude,\r\n            longitude:position.coords.longitude\r\n        })\r\n    }\r\n\r\n    onChangeInput(event){\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        if (localStorage.getItem('access')) {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                    'Accept': 'application/json'\r\n                }\r\n            };\r\n    \r\n\r\n            const res = await axios.get('/auth/users/me/', config);\r\n            // console.log(res);\r\n            const author = res.data.id;\r\n            const Category = this.state.topic;\r\n            const description = this.state.description;\r\n            const latitude = this.state.lattitude;\r\n            const longitude = this.state.longitude;\r\n            const body = JSON.stringify({author, Category,description,latitude,longitude});\r\n            console.log(body);\r\n            try {\r\n                const res = await axios.post('/complaint/api/',body, config);\r\n                console.log(\"compliant post success\");\r\n            \r\n            } catch (err) {\r\n                console.log(\"compliant post failed\");\r\n            }\r\n        } \r\n\r\n    }\r\n\r\n    onClickMap(map, evt) {\r\n        this.setState({\r\n            lattitude:evt.lngLat.lat,\r\n            longitude:evt.lngLat.lng\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Spring\r\n                from={{opacity:0,marginLeft:-500}}\r\n                to={{opacity:1,marginLeft:0}}\r\n                config={{duration:1000}}\r\n                >\r\n                    {props =>(\r\n                    <div style={props}>\r\n                        <div className={Styles.fitpage}>\r\n                            <div className=\"row mb-5\">\r\n                                <h1>Add a New Complaint</h1>\r\n                            </div>\r\n                            \r\n                            <div className=\"row mx-5\">\r\n                                <div className=\"col-10 col-md-5 mt-3\">\r\n                                    <form>\r\n                                        <div className={Styles.C_input}>\r\n                                            <input onChange={this.onChangeInput}  type=\"text\" name=\"topic\" placeholder=\"Topic\"/><br/> \r\n                                        </div>  \r\n                                        <div className={Styles.C_input}>\r\n                                            <textarea onChange={this.onChangeInput} type=\"text\" name=\"description\" placeholder=\"Description\"/><br/> \r\n                                        </div> \r\n                                        <div className={Styles.C_input}>\r\n                                            <input onChange={this.onChangeInput} type=\"number\" name=\"lattitude\" placeholder=\"Lattitude\" value={this.state.lattitude}/><br/> \r\n                                        </div> \r\n                                        <div className={Styles.C_input}>\r\n                                            <input onChange={this.onChangeInput} type=\"number\" name=\"longitude\" placeholder=\"Longitude\" value={this.state.longitude}/><br/> \r\n                                        </div> \r\n\r\n                                        {/* <div className={Styles.C_input}>\r\n                                            <input type=\"file\" name=\"image\" placeholder=\"image\" /><br/> \r\n                                        </div> */}\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-4 mx-auto  mt-2\" >\r\n                                            <button onClick={this.getLocation }   className={`${Styles.btn} ${Styles.fill_button}`}>getlocation</button>\r\n                                            </div>\r\n                                            <div className=\"col-md-4 mx-auto mt-2\" >\r\n                                                <button onClick={this.handleSubmit} className={`${Styles.btn} ${Styles.fill_button}`}> Submit</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"col-10 col-md-5 mt-3\">\r\n                                    <div >\r\n                                        <Map\r\n                                            style=\"mapbox://styles/mapbox/streets-v9\"\r\n                                            containerStyle={{\r\n                                                height: '60vh',\r\n                                                width: '45vw'\r\n                                            }}\r\n                                            center={[80.94615925,26.8467088]}\r\n                                            zoom={[5]}\r\n                                            onClick={this.onClickMap}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n            </Spring>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Complaint;","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport Styles from './Components.module.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { Spring } from 'react-spring/renderprops'; \r\n\r\n\r\nclass PastComplaint extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            complaintData:[]\r\n        };\r\n        this.LoadData=this.LoadData.bind(this);\r\n    }\r\n\r\n    async LoadData(){\r\n        if (localStorage.getItem('access')) {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                    'Accept': 'application/json'\r\n                }\r\n            };\r\n\r\n            try {\r\n                const res = await axios.get('/complaint/api/pastcomplaint/', config);\r\n                console.log(res.data);\r\n                this.setState({\r\n                    complaintData:res.data\r\n                })\r\n            \r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LoadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.id !== prevProps.id) {\r\n          this.LoadData();\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    render(){\r\n        \r\n        return(\r\n            <Spring\r\n            from={{opacity:0,marginLeft:-500}}\r\n            to={{opacity:1,marginLeft:0}}\r\n            config={{duration:1000}}\r\n            >\r\n                {props =>(\r\n                   <div style={props}>\r\n                        <div className={Styles.container}>\r\n                            {this.state.complaintData &&\r\n                            this.state.complaintData.map(complaint => {\r\n\r\n                                return (\r\n                                    <Link className={Styles.linkk} to={`complaintdetail/${complaint.pk}`}>\r\n                                        <div className={Styles.complaint}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-header\">\r\n                                                <h4>{complaint.Category}</h4>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <p className={`card-text ${Styles.blackk}`}>{complaint.description}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                   </div>)}\r\n            </Spring>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default PastComplaint;\r\n\r\n\r\n\r\n\r\n        // <Spring\r\n        //     from={{opacity:0,marginLeft:-500}}\r\n        //     to={{opacity:1,marginLeft:0}}\r\n        //     config={{duration:1000}}\r\n        //     >\r\n        //         {props =>(\r\n        //            <div style={props}>\r\n\r\n        //            </div>\r\n        //         )}\r\n        //  </Spring>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import Styles from './Components.module.css';\r\n\r\n// const PastComplaint = ()=>{\r\n//     return(\r\n//         <div>\r\n//             <button className={`${Styles.btn} ${Styles.fill_button}`}>PastComplaint </button>\r\n//             <button className={`${Styles.btn} ${Styles.empty_button}`}>PastComplaint </button>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default PastComplaint;","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport Styles from './Components.module.css';\r\nimport { Spring } from 'react-spring/renderprops'; \r\nimport axios from 'axios';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    const continueWithGoogle = async()=>{\r\n        try{\r\n            const res = await axios.get('/auth/o/google-oauth2/?redirect_uri=http://localhost:8000')\r\n            window.location.replace(res.data.authorization_url);\r\n        }\r\n        catch(err){\r\n            // co\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n    \r\n    return (\r\n        <Spring\r\n            from={{opacity:0,marginLeft:-500}}\r\n            to={{opacity:1,marginLeft:0}}\r\n            config={{duration:1000}}\r\n            >\r\n                {props =>(\r\n                <div style={props}>\r\n                     <div className={Styles.container}>\r\n                        <div className='row mx-3'>\r\n                            <div className=\"col-md-5 mx-auto my-auto\"> \r\n                                <h1>Sign In</h1>\r\n                                <p>Sign into your Account</p>\r\n                                <form onSubmit={e => onSubmit(e)}>\r\n                                    <div className='form-group'>\r\n                                        <input \r\n                                            className='form-control'\r\n                                            type='email'\r\n                                            placeholder='Email'\r\n                                            name='email'\r\n                                            value={email}\r\n                                            onChange={e => onChange(e)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <input\r\n                                            className='form-control'\r\n                                            type='password'\r\n                                            placeholder='Password'\r\n                                            name='password'\r\n                                            value={password}\r\n                                            onChange={e => onChange(e)} \r\n                                            minLength='6'\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <button className={`${Styles.btn} ${Styles.fill_button}`} type='submit'>Login</button>\r\n                                </form>\r\n\r\n                                <p className='mt-3'>\r\n                                <button className=\"btn btn-danger\" onClick={continueWithGoogle}>Continue with google</button>\r\n                                </p>\r\n                                <p className='mt-3'>\r\n                                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n                                </p>\r\n                                <p className='mt-3'>\r\n                                Forgot your Password? <Link to='/reset_password'>Reset Password</Link>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )}\r\n        </Spring>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React,{Component, useState} from 'react';\r\n// import {Link} from 'react-router-dom';\r\n// import {connect} from 'react-redux';\r\n\r\n// import Styles from './Components.module.css';\r\n\r\n// class Login extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//            username:\"\",\r\n//            password:\"\"\r\n//         };\r\n//         this.onChangeInput=this.onChangeInput.bind(this);\r\n//         this.handleLogin=this.handleLogin.bind(this);\r\n//     }\r\n\r\n//     onChangeInput(event){\r\n//         this.setState({\r\n//             [event.target.name]:event.target.value\r\n//         })\r\n\r\n//     }\r\n\r\n//     handleLogin(event){\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     render(){\r\n//         return (\r\n//             <div className=\"row\" >\r\n//                 <div className=\"col-md-5 mx-auto my-5\">\r\n//                     <form method=\"GET\">\r\n//                         <div className={Styles.C_input}>\r\n//                             <input onChange={this.onChangeInput}  type=\"text\" name=\"username\" placeholder=\"Username\"/><br/> \r\n//                         </div>  \r\n//                         <div className={Styles.C_input}>\r\n//                             <input onChange={this.onChangeInput} type=\"password\" name=\"password\" placeholder=\"Password\"/><br/> \r\n//                         </div> \r\n\r\n//                         <div className=\"row\">\r\n//                             <div className=\"col-md-5 mx-auto\" >\r\n//                                 <button onClick={this.handleLogin} className={`${Styles.btn} ${Styles.fill_button}`}>Login</button>\r\n//                             </div>\r\n//                             <div className=\"col-md-5 mx-auto\" >\r\n//                                 <p>Don't have an account then  </p>\r\n//                                 <button className={`${Styles.btn} ${Styles.fill_button}`}><Link to=\"/uregister\" className={Styles.navlink}>Register</Link></button>\r\n//                             </div>\r\n//                         </div>\r\n//                     </form>\r\n//                 </div>\r\n//             </div>\r\n\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Login;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signup } from '../actions/auth';\r\nimport Styles from './Components.module.css';\r\nimport { Spring } from 'react-spring/renderprops'; \r\nimport axios from 'axios';\r\n\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        firstname: '',\r\n        lastname:' ',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n\r\n    const { firstname,lastname, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup({ firstname,lastname, email, password, re_password });\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n    const continueWithGoogle = async()=>{\r\n        try{\r\n            console.log('yee');\r\n            const res = await axios.get('/auth/o/google-oauth2/?redirect_uri=http://localhost:8000');\r\n            console.log(res);\r\n            window.location.replace(res.data.authorization_url);\r\n        }\r\n        catch(err){\r\n            // co\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n    if (accountCreated)\r\n        return <Redirect to='login' />;\r\n    \r\n    return (\r\n        <Spring\r\n            from={{opacity:0,marginLeft:-500}}\r\n            to={{opacity:1,marginLeft:0}}\r\n            config={{duration:1000}}\r\n            >\r\n                {props =>(\r\n                   <div style={props}>\r\n                        <div className={Styles.fitpage}>\r\n                            <div className='row mx-3'>\r\n                                <div className=\"col-md-5 mx-auto my-auto\"> \r\n                                    <h1>Sign Up</h1>\r\n                                    <p>Create your Account</p>\r\n                                    <form onSubmit={e => onSubmit(e)}>\r\n                                        <div className='form-group'>\r\n                                            <input \r\n                                                className='form-control'\r\n                                                type='text'\r\n                                                placeholder='First Name*'\r\n                                                name='firstname'\r\n                                                value={firstname}\r\n                                                onChange={e => onChange(e)}\r\n                                                required \r\n                                            />\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <input \r\n                                                className='form-control'\r\n                                                type='text'\r\n                                                placeholder='Last Name*'\r\n                                                name='lastname'\r\n                                                value={lastname}\r\n                                                onChange={e => onChange(e)}\r\n                                                required \r\n                                            />\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <input \r\n                                                className='form-control'\r\n                                                type='email'\r\n                                                placeholder='Email*'\r\n                                                name='email'\r\n                                                value={email}\r\n                                                onChange={e => onChange(e)}\r\n                                                required \r\n                                            />\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <input\r\n                                                className='form-control'\r\n                                                type='password'\r\n                                                placeholder='Password*'\r\n                                                name='password'\r\n                                                value={password}\r\n                                                onChange={e => onChange(e)}\r\n                                                minLength='6'\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <input\r\n                                                className='form-control'\r\n                                                type='password'\r\n                                                placeholder='Confirm Password*'\r\n                                                name='re_password'\r\n                                                value={re_password}\r\n                                                onChange={e => onChange(e)}\r\n                                                minLength='6'\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        <button className={`${Styles.btn} ${Styles.fill_button}`}  type='submit'>Register</button>\r\n                                    </form>\r\n                                    <p className='mt-3'>\r\n                                        <button className=\"btn btn-danger\" onClick={continueWithGoogle}>Continue with google</button>\r\n                                    </p>\r\n                                    <p className='mt-3'>\r\n                                        Already have an account? <Link to='/login'>Sign In</Link>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                   </div>\r\n                )}\r\n         </Spring>\r\n       \r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React,{Component} from 'react';\r\n// import {Link} from 'react-router-dom';\r\n// import Styles from './Components.module.css';\r\n\r\n// class Signup extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//            username:\"\",\r\n//            password:\"\"\r\n//         };\r\n//         this.onChangeInput=this.onChangeInput.bind(this);\r\n//         this.handleLogin=this.handleLogin.bind(this);\r\n//     }\r\n\r\n//     onChangeInput(event){\r\n//         this.setState({\r\n//             [event.target.name]:event.target.value\r\n//         })\r\n\r\n//     }\r\n\r\n//     handleLogin(event){\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     render(){\r\n//         return (\r\n//             <div className=\"row\" >\r\n//                 <div className=\"col-md-5 mx-auto my-5\">\r\n//                 <button className={`${Styles.btn} ${Styles.fill_button}`}><Link to=\"/eregister\" className={Styles.navlink}>Register as an Employee</Link></button>\r\n//                     <p>OR</p>\r\n//                     <h3>Register as an User</h3>\r\n//                     <form method=\"GET\">\r\n//                         <div className={Styles.C_input}>\r\n//                             <input onChange={this.onChangeInput}  type=\"text\" name=\"username\" placeholder=\"Username\"/><br/> \r\n//                         </div>  \r\n//                         <div className={Styles.C_input}>\r\n//                             <input onChange={this.onChangeInput} type=\"password\" name=\"password\" placeholder=\"Password\"/><br/> \r\n//                         </div> \r\n\r\n//                         <button onClick={this.handleLogin} className={`${Styles.btn} ${Styles.fill_button}`}>Register</button>\r\n                        \r\n//                     </form>\r\n//                 </div>\r\n//             </div>\r\n\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Signup;","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport Styles from './Components.module.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { Spring } from 'react-spring/renderprops'; \r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            complaintData:[]\r\n        };\r\n        this.LoadData=this.LoadData.bind(this);\r\n    }\r\n\r\n    async LoadData(){\r\n        if (localStorage.getItem('access')) {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            };\r\n\r\n            try {\r\n                const res = await axios.get('/complaint/api/', config);\r\n                console.log(res.data);\r\n                this.setState({\r\n                    complaintData:res.data\r\n                })\r\n            \r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LoadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.id !== prevProps.id) {\r\n          this.LoadData();\r\n        }\r\n      }\r\n\r\n    \r\n    \r\n    render(){\r\n        \r\n        return(\r\n            <Spring\r\n            from={{opacity:0,marginLeft:-500}}\r\n            to={{opacity:1,marginLeft:0}}\r\n            config={{duration:1000}}\r\n            >\r\n                {props =>(\r\n                   <div style={props}>\r\n                       <div className={Styles.container}>\r\n                            {this.state.complaintData &&\r\n                            this.state.complaintData.map(complaint => {\r\n\r\n                                return (\r\n                                    <Link className={Styles.linkk} to={`complaintdetail/${complaint.pk}`}>\r\n                                        <div className={Styles.complaint}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-header\">\r\n                                                <h4>{complaint.Category}</h4>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <p className={`card-text ${Styles.blackk}`}>{complaint.description}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                   </div> \r\n                )}\r\n            </Spring>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React,{Component} from 'react';\r\nimport Styles from './Components.module.css';\r\n\r\nclass RegisterEmployee extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n           username:\"\",\r\n           password:\"\"\r\n        };\r\n        this.onChangeInput=this.onChangeInput.bind(this);\r\n        this.handleLogin=this.handleLogin.bind(this);\r\n    }\r\n\r\n    onChangeInput(event){\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    handleLogin(event){\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"row\" >\r\n                <div className=\"col-md-5 mx-auto my-5\">\r\n                    \r\n                    <form method=\"GET\">\r\n                        <div className={Styles.C_input}>\r\n                            <input onChange={this.onChangeInput}  type=\"text\" name=\"username\" placeholder=\"Username\"/><br/> \r\n                        </div>  \r\n                        <div className={Styles.C_input}>\r\n                            <input onChange={this.onChangeInput} type=\"password\" name=\"password\" placeholder=\"Password\"/><br/> \r\n                        </div> \r\n\r\n                        <button onClick={this.handleLogin} className={`${Styles.btn} ${Styles.fill_button}`}>Register</button>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterEmployee;","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../actions/auth';\r\nimport Styles from './Components.module.css';\r\n\r\nconst ResetPassword = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className={Styles.container}>\r\n            <div className='container'>\r\n                <h1>Request Password Reset:</h1>\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <input \r\n                            className='form-control'\r\n                            type='email'\r\n                            placeholder='Your Email'\r\n                            name='email'\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button className={`${Styles.btn} ${Styles.fill_button}`} type='submit'>Reset Password</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\nimport Styles from './Components.module.css';\r\n\r\nconst ResetPasswordConfirm = (props) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const uid = props.match.params.uid;\r\n        const token = props.match.params.token;\r\n\r\n        props.reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className={Styles.container}>\r\n            <div className='container'>\r\n                <form onSubmit={e => onSubmit(e)}>\r\n                    <div className='form-group'>\r\n                        <input \r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='New Password'\r\n                            name='new_password'\r\n                            value={new_password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='Confirm New Password'\r\n                            name='re_new_password'\r\n                            value={re_new_password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button className={`${Styles.btn} ${Styles.fill_button}`} type='submit'>Reset Password</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\nimport Styles from './Components.module.css';\r\n\r\nconst Activate = (props) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = props.match.params.uid;\r\n        const token = props.match.params.token;\r\n\r\n        props.verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className={Styles.container}>\r\n            <div className='container'>\r\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column',marginTop: '200px' }}>\r\n                    <h1>Verify your Account:</h1>\r\n                    <button \r\n                        onClick={verify_account}\r\n                        style={{ marginTop: '50px' }}\r\n                        type=\"button\"\r\n                        className={`${Styles.btn} ${Styles.fill_button}`}\r\n                    >\r\n                        Verify\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","import React from 'react';\r\nimport Styles from './Components.module.css';\r\n\r\nconst PastComplaint = ()=>{\r\n    return(\r\n        <div>\r\n            <h1>Opps! wrong page!!</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PastComplaint;","import React,{Component} from 'react';\r\nimport Styles from './Components.module.css';\r\nimport ReactMapboxGl, { Layer, Feature,Marker } from 'react-mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport axios from 'axios';\r\nimport { Spring } from 'react-spring/renderprops'; \r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken:\r\n    'pk.eyJ1IjoicmFnaHVyYWpqIiwiYSI6ImNrMnJpYzhzZjA2MGIzZXBkb2oxYnV2MWQifQ.1PinwGk6Y3P0q-l7SXkfWg'\r\n});\r\n\r\nclass ComplaintDetail extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            complaintData:''\r\n        };\r\n        this.LoadData=this.LoadData.bind(this);\r\n    }\r\n\r\n    async LoadData(){\r\n        if (localStorage.getItem('access')) {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                    'Accept': 'application/json'\r\n                }\r\n            };\r\n\r\n            try {\r\n                const pk = (window.location.pathname.split('/'))[2];\r\n                const url = '/complaint/api/pastcomplaint/'+pk+'/';\r\n                const res = await axios.get(url, config);\r\n                console.log(res.data);\r\n                this.setState({\r\n                    complaintData:res.data\r\n                })\r\n            \r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.LoadData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.id !== prevProps.id) {\r\n          this.LoadData();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Spring\r\n                from={{opacity:0,marginLeft:-500}}\r\n                to={{opacity:1,marginLeft:0}}\r\n                config={{duration:1000}}\r\n                >\r\n                    {props =>(\r\n                    <div style={props}>\r\n                         <div className={Styles.container}>\r\n                            <div className=\"row\">\r\n                                <h1>{this.state.complaintData[0]?this.state.complaintData[0].Category:'Category'}</h1>\r\n                            </div>\r\n                            <div className=\"row my-5 mx-5\">\r\n                                <div className={`col-10 col-md-5 mt-3 ${Styles.c_detail}`}>\r\n                                    <p>{this.state.complaintData[0]?this.state.complaintData[0].description:'description'}</p>\r\n                                    <br/>\r\n                                    <p>{this.state.complaintData[0]?this.state.complaintData[0].latitude:'latitude'}</p>\r\n                                    <p>{this.state.complaintData[0]?this.state.complaintData[0].longitude:'longitude'}</p>\r\n                                </div>\r\n                                <div className=\"col-10 col-md-5 pr-5\">\r\n                                    <Map\r\n                                        style=\"mapbox://styles/mapbox/streets-v9\"\r\n                                        containerStyle={{\r\n                                            height: '60vh',\r\n                                            width: '40vw'\r\n                                        }}\r\n                                        center={this.state.complaintData[0]?[this.state.complaintData[0].longitude,this.state.complaintData[0].latitude]:[80.94615925,26.8467088]}\r\n                                        zoom={[5]}\r\n                                    >\r\n                                        {this.state.complaintData[0]?\r\n                                        <Marker\r\n                                            coordinates={[this.state.complaintData[0].longitude,this.state.complaintData[0].latitude]}\r\n                                            anchor=\"bottom\"\r\n                                            width='10px'\r\n                                            height='10px'>\r\n                                            <div className={Styles.mapMarkerStyle} />\r\n                                        </Marker>:\r\n                                        <Marker\r\n                                            coordinates={[80.94615925, 26.8467088]}\r\n                                            anchor=\"bottom\"\r\n                                            width='10px'\r\n                                            height='10px'>\r\n                                            <div className={Styles.mapMarkerStyle} />\r\n                                        </Marker>\r\n                                        }\r\n                                    </Map>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n            </Spring>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComplaintDetail;","import React, { useEffect } from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user, googleAuthenticate } from '../actions/auth';\r\nimport queryString from 'query-string';\r\n\r\nconst Layout = (props) => {\r\n\r\n    let location = useLocation();\r\n    useEffect(() => {\r\n        const values = queryString.parse(location.search);\r\n        const state = values.state ? values.state : null;\r\n        const code = values.code ? values.code : null;\r\n\r\n        console.log('State: '+ state);\r\n        console.log('Code: '+ code);\r\n        \r\n\r\n        if(state && code){\r\n            props.googleAuthenticate(state,code);\r\n        }else{\r\n            props.checkAuthenticated();\r\n            props.load_user();\r\n        }\r\n\r\n    }, [location]);\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user,googleAuthenticate })(Layout);","import React from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {Switch,Route} from 'react-router-dom';\nimport Header from './components/Header';\nimport Complaint from './components/Complaint';\nimport PastComplaints from './components/PastComplaints';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport RegisterEmployee from './components/RegisterEmployee';\nimport Home from './components/Home';\nimport ResetPassword from './components/ResetPassword';\nimport ResetPasswordConfirm from './components/ResetPasswordConfirm';\nimport Activate from './components/Activate';\nimport Default from './components/Default';\nimport ComplaintDetail from './components/ComplaintDetail';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Layout from './hocs/Layout';\n\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n        <Layout>\n        <Switch> \n          <Route exact path='/' component={Home} />\n          <Route exact path=\"/newcomplaint\" component={Complaint} />\n          <Route exact path=\"/pastcomplaints\" component={PastComplaints} />\n          <Route exact path=\"/complaintdetail/:pk\" component={ComplaintDetail} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path='/signup' component={Signup} />\n          <Route exact path='/reset_password' component={ResetPassword} />\n          <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n          <Route exact path='/activate/:uid/:token' component={Activate} />\n          <Route component={Default} />\n          \n        </Switch>\n        </Layout>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nvbr\":\"Components_nvbr__3iG-Z\",\"navlink\":\"Components_navlink__24IkJ\",\"toggler\":\"Components_toggler__2Yk1k\",\"container\":\"Components_container__3jssv\",\"btn\":\"Components_btn__1U7OY\",\"fill_button\":\"Components_fill_button__3WKKB\",\"empty_button\":\"Components_empty_button__26J0a\",\"form\":\"Components_form__2izBT\",\"C_input\":\"Components_C_input__HAbIC\",\"complaint\":\"Components_complaint__3Ukaq\",\"blackk\":\"Components_blackk__3cxl4\",\"linkk\":\"Components_linkk__1GeqS\",\"c_detail\":\"Components_c_detail__2hfV2\",\"fitpage\":\"Components_fitpage__3lYhw\",\"overflow_scroll\":\"Components_overflow_scroll__1VCd2\",\"mapMarkerStyle\":\"Components_mapMarkerStyle__35Xfg\"};"],"sourceRoot":""}